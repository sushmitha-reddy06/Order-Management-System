generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 String             @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  full_name          String             @db.VarChar(255)
  contact_number     String             @db.VarChar(20)
  email              String             @unique @db.VarChar(255)
  password_hash      String
  role               String?            @default("buyer") @db.VarChar(20)
  is_active          Boolean?           @default(true)
  created_at         DateTime?          @default(now()) @db.Timestamp(6)
  updated_at         DateTime?          @default(now()) @db.Timestamp(6)
  deleted_at         DateTime?          @db.Timestamp(6)
  blacklisted_tokens BlacklistedToken[]

  @@index([email], map: "idx_users_email")
  @@index([role], map: "idx_users_role")
  @@map("users")
}

model BlacklistedToken {
  id             Int       @id @default(autoincrement())
  token          String    @unique
  user_id        String    @db.Uuid
  blacklisted_at DateTime? @default(now()) @db.Timestamp(6)
  expires_at     DateTime  @db.Timestamp(6)
  users          User      @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([token], map: "idx_blacklisted_tokens_token")
  @@index([user_id], map: "idx_blacklisted_tokens_user_id")
  @@map("blacklisted_tokens")
}
