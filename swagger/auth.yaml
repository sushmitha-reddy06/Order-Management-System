openapi: 3.0.0
info:
  title: OMS - Auth API
  version: 1.0.0
  description: Authentication and user management endpoints for the Order Management System

tags:
  - name: Auth
    description: User authentication and account management

paths:
  /api/auth/register:
    post:
      summary: Register a new user
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - full_name
                - contact_number
                - email
                - password
              properties:
                full_name:
                  type: string
                contact_number:
                  type: string
                email:
                  type: string
                  format: email
                password:
                  type: string
                role:
                  type: string
                  enum: [buyer, seller, admin]
      responses:
        201:
          description: User registered successfully
        400:
          description: Validation error

  /api/auth/login:
    post:
      summary: Login user
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
      responses:
        200:
          description: Login successful
        400:
          description: Validation error
        401:
          description: Invalid credentials

  /api/auth/me:
    get:
      summary: Get current user profile
      tags: [Auth]
      security:
        - bearerAuth: []
      responses:
        200:
          description: Profile retrieved successfully
        401:
          description: Unauthorized

  /api/auth/logout:
    post:
      summary: Logout user
      tags: [Auth]
      security:
        - bearerAuth: []
      responses:
        200:
          description: Logout successful
        401:
          description: Unauthorized

  /api/auth/deactivate:
    post:
      summary: Deactivate account (soft delete)
      tags: [Auth]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - password
              properties:
                password:
                  type: string
      responses:
        200:
          description: Account deactivated successfully
        400:
          description: Validation error
        401:
          description: Unauthorized

  /api/auth/delete:
    delete:
      summary: Permanently delete account
      tags: [Auth]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - password
              properties:
                password:
                  type: string
      responses:
        200:
          description: Account deleted successfully
        400:
          description: Validation error
        401:
          description: Unauthorized

  # /api/auth/change-password:
  #   patch:
  #     summary: Change password
  #     tags: [Auth]
  #     security:
  #       - bearerAuth: []
  #     requestBody:
  #       required: true
  #       content:
  #         application/json:
  #           schema:
  #             type: object
  #             required:
  #               - currentPassword
  #               - newPassword
  #             properties:
  #               currentPassword:
  #                 type: string
  #               newPassword:
  #                 type: string
  #     responses:
  #       200:
  #         description: Password changed successfully
  #       400:
  #         description: Validation error
  #       401:
  #         description: Unauthorized

  /api/auth/sessions:
    get:
      summary: Get all active sessions
      description: Future endpoint for session management
      tags: [Auth]
      security:
        - bearerAuth: []
      responses:
        200:
          description: Sessions list (stub response)
        401:
          description: Unauthorized

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
